{"ast":null,"code":"import { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Item = function Item(props) {\n  return _jsxs(Pressable, {\n    style: styles.item(props.item.choosen),\n    onPress: function onPress() {\n      props.setItem(propsitem, choosen, !props.item.choosen);\n    },\n    children: [_jsx(Image, {\n      style: styles.imageItem,\n      source: props.item.imageSource\n    }), _jsxs(View, {\n      style: styles.itemText,\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: props.item.name\n      }), _jsx(Text, {\n        style: {\n          flexWrap: 'wrap'\n        },\n        children: props.item.description\n      }), _jsx(Text, {\n        style: {\n          color: 'orange',\n          fontSize: 20\n        },\n        children: props.item.price\n      })]\n    }), _jsxs(View, {\n      style: styles.button,\n      children: [_jsx(Button, {\n        title: \"-\",\n        color: 'orange',\n        onPress: function onPress() {\n          props.item.amount > 0 ? props.setItem(props.item, amount, props.item.amount--) : '';\n        }\n      }), _jsx(Text, {\n        children: props.item.amount\n      }), _jsx(Button, {\n        title: \"+\",\n        color: 'orange',\n        onPress: function onPress() {\n          props.setItem(props.item, amount, props.item.amount++);\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  imageItem: {\n    width: 50,\n    height: 100\n  },\n  item: function item(ifChoosen) {\n    return {\n      flexDirection: 'row',\n      width: '85%',\n      height: '15%',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginTop: 20,\n      borderColor: ifChoosen ? \"green\" : \"\",\n      borderWidth: ifChoosen ? 5 : 0,\n      shadowColor: \"#000000\",\n      shadowOpacity: 0.8,\n      shadowRadius: 2,\n      shadowOffset: {\n        height: 1,\n        width: 1\n      }\n    };\n  },\n  itemText: {\n    flexDirection: 'column',\n    alignContent: 'flex-start',\n    marginLeft: 20,\n    width: '60%'\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'orange',\n    width: 40,\n    height: 35\n  }\n});\nexport default Item;","map":{"version":3,"names":["useState","View","Image","Text","Button","StyleSheet","Pressable","jsx","_jsx","jsxs","_jsxs","Item","props","style","styles","item","choosen","onPress","setItem","propsitem","children","imageItem","source","imageSource","itemText","fontWeight","name","flexWrap","description","color","fontSize","price","button","title","amount","create","width","height","ifChoosen","flexDirection","justifyContent","alignItems","marginTop","borderColor","borderWidth","shadowColor","shadowOpacity","shadowRadius","shadowOffset","alignContent","marginLeft","backgroundColor"],"sources":["C:/Users/renat/Desktop/Prog/Lessons/lesson16/shop/components/Item.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Image, Text, Button, StyleSheet, Pressable } from \"react-native\";\r\n\r\nconst Item = (props) => {\r\n    return (\r\n        <Pressable \r\n          style={styles.item(props.item.choosen)} \r\n          onPress={()=>{\r\n            props.setItem(propsitem, choosen, !props.item.choosen)\r\n          }}\r\n        >\r\n          <Image style={styles.imageItem} source={props.item.imageSource}/>\r\n          <View style={styles.itemText}>\r\n            <Text style={{fontWeight: 'bold'}}>{props.item.name}</Text>\r\n            <Text style={{flexWrap: 'wrap'}}>{props.item.description}</Text>\r\n            <Text style={{color: 'orange', fontSize: 20}}>{props.item.price}</Text>\r\n          </View>\r\n\r\n          <View style={styles.button}>\r\n            <Button title='-' color={'orange'} onPress={()=>{props.item.amount>0 ? props.setItem(props.item, amount, props.item.amount--) : ''}}/>\r\n            <Text>{props.item.amount}</Text>\r\n            <Button title='+' color={'orange'} onPress={()=>{props.setItem(props.item, amount, props.item.amount++)}}/>\r\n          </View>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    imageItem:{\r\n      width: 50,\r\n      height: 100\r\n    },\r\n    item: ifChoosen => ({\r\n      flexDirection: 'row',\r\n      width: '85%',\r\n      height: '15%',\r\n      justifyContent: 'flex-start',\r\n      alignItems: 'center',\r\n      marginTop: 20,\r\n      borderColor: ifChoosen ? \"green\" : \"\", \r\n      borderWidth: ifChoosen ? 5 : 0,\r\n      shadowColor: \"#000000\",\r\n      shadowOpacity: 0.8,\r\n      shadowRadius: 2,\r\n      shadowOffset: {\r\n        height: 1,\r\n        width: 1\r\n      }\r\n    }),\r\n    itemText:{\r\n      flexDirection: 'column',\r\n      alignContent: 'flex-start',\r\n      marginLeft: 20,\r\n      width: '60%'\r\n    },\r\n    button: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      backgroundColor: 'orange',\r\n      width: 40,\r\n      height: 35\r\n    }\r\n});\r\n\r\nexport default Item;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}